# QUICK AND DIRTY: COMPILATION AND INSTALLATION ################################

Don't really need anything...

    $ make PREFIX=/usr install

--------------------------------------------------------------------------------

NOTE:
    Library documentation has gotten somewhat better, but this new build system
    could have made things a tiny bit trickier. This has been tested on
    linux/x86-64, linux/powerpc, darwin/powerpc and windows/x86 though.

NOTE.2:
    Please take note of the library licence (the COPYING file), as well as the
    credits (the CREDITS file).

# DETAILS ######################################################################

Compilation
-----------

This version of Curie uses the good ol' "make" command. To compile the library,
simply run this command:

    $ make

Installation
------------

Use this command to install regularly (for example into /usr, in the example):

    $ make PREFIX=/usr install

# TROUBLESHOOTING / KNOWN ISSUES ###############################################

Stack protectors
----------------

Compilation may crash or curie programmes may die/stall/eat all resources for no
apparent reason in the garbage collection phase if you have a gcc that has been
patched with SSP and SSP is enabled by default. If you experience any funky
issues and you have SSP enabled, add -fno-stack-protector to your CFLAGS while
compiling curie programmes.

Protip: if you're an application developer you should shun SSP at all costs and
instead just fix your (or others') code if it's broken. Do not confuse fighting
the symptoms with fixing the underlying issue, it's not the same, no matter what
your computer science teachers with a favour for java and no concept nor
understanding of pointers may have told you. SSP in all its forms is one of the
sad reasons why applications suck these days.

# CONTACT #####################################################################

Your best bet is IRC: freenode #kyuba
