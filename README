###- QUICK AND DIRTY: COMPILATION AND INSTALLATION -############################
  Don't really need anything...

    $ ./build.sh -dif /usr


################################################################################


NOTE:
  Library documentation has gotten somewhat better, but this new build system
  could have made things a tiny bit trickier. This has been tested on
  linux/x86-64, linux/powerpc, linux/arm and darwin/powerpc though.

NOTE.2:
  Please take note of the library licence (the COPYING file), as well as the
  credits (the CREDITS file).


###- DETAILS -##################################################################

Compilation:
  If you have icemake installed already, for whatever reason that may be, just
  call:

    $ icemake

  otherwise (which should be the most common case), use:

    $ ./build.sh

  This will compile the library itself.

  A number of compilation options are available if you run into issues. To see
  them, use one of these:

    $ icemake --help
  -- or --
    $ ./build.sh --help

Installation:
  use this command to install regularly (for example into /usr, in the example):

    $ icemake -dif /usr
  -- or --
    $ ./build.sh -dif /usr

Compiling/Installing icemake:
  Installing icemake separately is fairly simple:

    $ icemake -dif /usr icemake
  -- or --
    $ ./build.sh -dif /usr icemake

  Icemake will heed the environment variables CHOST, CFLAGS, CXXFLAGS and
  LDFLAGS. Other flags, such as CC, are ignored, because you /should/ set the
  proper CHOST instead. The bootstrap version of icemake, used to build the
  initial icemake and libcurie, does heed CC instead of the other environment
  variables though.

Linking against libcurie without using icemake:
  Use pkg-config to retrieve the flags needed to link with libcurie:

    $ pkg-config --cflags --libs libcurie

  For the hosted variant, use:

    $ pkg-config --cflags --libs libcurie-hosted

  Check pkg-config's documentation for more details.

Testing:
  Please help by giving this libraries' test suites a shot:

    $ icemake -r
  -- or --
    $ ./build.sh -r

  When running this suite, please take note of the memory use with a tool like
  top. Afterwards, just send the output of the command to
  <magnus.deininger@student.uni-tuebingen.de>, or drop by on IRC

CONTACT:
  Best bet is IRC: freenode #kyuba
