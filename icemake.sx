;;
; vim:ft=lisp
;;

(library "curie-bootstrap" libcurie no-shared-library
  (name "Curie Boostrap")
  (description "Inialisation code for libcurie, used when building freestanding programmes")
  (version "1")

  (code "bootstrap"))

(library "curie" libcurie
  (name "Curie")
  (description "minimalistic, sexpr-based, non-posix(!), non-ansi(!) libc")
  (version "11")
  (url "http://kyuba.org/")

  (code (tree "tree-basic")
        (memory "memory" "memory-valgrind")
        "sexpr" "io" "memory-pool" "exec" "multiplex" "string"
        "memory-allocator" "sexpr-library" "sexpr-read-write" "network"
        "multiplex-io" "multiplex-sexpr" "multiplex-process" "multiplex-signal"
        "graph" "filesystem" "io-system" "network-system"
        "exec-system" "multiplex-system" "signal-system" "regex"
        "directory" "directory-common" "libc-compat" "utf-8"
        "sexpr-stdio" "stdio" "stack" "gc" "variables"
        "sexpr-custom" "time" "time-system" "hash" "tree-library"
        "gcd" "io-pool")

  (headers
        "exec" "main" "sexpr" "memory" "multiplex" "signal" "tree" "network"
        "int" "io" "constants" "graph" "filesystem" "regex"
        "directory" "string" "utf-8" "time" "stack" "gc" "hash" "math")

  (test-case-reference
        ("build/to-curie-test-data" . "tests/reference/curie-test-data")
        ("build/to-io-test-file" . "tests/reference/io-test-file")
        ("build/to-multiplexer-sexpr-test-data" .
         "tests/reference/multiplexer-sexpr-test-data")
        ("build/to-multiplexer-test-data" .
         "tests/reference/multiplexer-test-data")
        ("build/to-sexpr-read" . "tests/reference/sexpr-read")
        ("build/to-sexpr-write" . "tests/reference/sexpr-write")
        ("build/to-sexpr-custom" . "tests/reference/sexpr-custom"))

  (documentation
        "description"))

(test-case "bad-allocation"          libcurie (code "test-bad-allocation"))
(test-case "bad-resize"              libcurie (code "test-bad-resize"))
(test-case "curie-main"              libcurie (code "test-curie-main"))
(test-case "environment"             libcurie (code "test-environment"))
(test-case "execute-fork"            libcurie (code "test-execute-fork"))
(test-case "execute-fork-purge"      libcurie (code "test-execute-fork-purge"))
(test-case "exit"                    libcurie (code "test-exit"))
(test-case "filesystem"              libcurie (code "test-filesystem"))
(test-case "graph"                   libcurie (code "test-graph"))
(test-case "io"                      libcurie (code "test-io"))
(test-case "memory-allocator"        libcurie (code "test-memory-allocator"))
(test-case "memory-pool"             libcurie (code "test-memory-pool"))
(test-case "memory-primitives"       libcurie (code "test-memory-primitives"))
(test-case "multiplex-all-processes" libcurie
  (code "test-multiplex-all-processes"))
(test-case "multiplex-io"            libcurie (code "test-multiplex-io"))
(test-case "multiplex-network"       libcurie (code "test-multiplex-network"))
(test-case "multiplex-process"       libcurie (code "test-multiplex-process"))
(test-case "multiplex-sexpr"         libcurie (code "test-multiplex-sexpr"))
(test-case "network-loop"            libcurie (code "test-network-loop"))
(test-case "read-write"              libcurie (code "test-read-write"))
(test-case "sexpr-read"              libcurie (code "test-sexpr-read"))
(test-case "sexpr-write"             libcurie (code "test-sexpr-write"))
(test-case "tree-node-removal"       libcurie (code "test-tree-node-removal"))
(test-case "tree-plain"              libcurie (code "test-tree-plain"))
(test-case "tree-random"             libcurie (code "test-tree-random"))
(test-case "tree-random-node-removal" libcurie
  (code "test-tree-random-node-removal"))
(test-case "tree-value"              libcurie (code "test-tree-value"))
(test-case "regex"                   libcurie (code "test-regex"))
(test-case "io-special"              libcurie (code "test-io-special"))
(test-case "gc"                      libcurie (code "test-gc"))
(test-case "sexpr-custom"            libcurie (code "test-sexpr-custom"))
(test-case "time"                    libcurie (code "test-time"))

(library "syscall" libcurie
  (name "libsyscall")
  (description "raw syscall library, useful for implementing libcs and low-level system tools")
  (version "1")

  (code "syscall")

  (headers
        "syscall"))

(library "sievert" libcurie
  (name "Sievert")
  (description "library with auxiliary functionality, based off of libcurie")
  (version "1")
  (url "http://kyuba.org/")

  (libraries
        "syscall")

  (code "immutable"
        "tree-string"
        "sievert-sexpr" "sexpr-set" "sexpr-set-regex" "sexpr-set-string"
        "sexpr-sort"
        "string-set" "string-set-regex"
        "shell"
        "cpio"
        "time-unix"
        "io-mmap"
        "metadata-path" "metadata-unix")

  (headers
        "immutable" "tree" "sexpr" "string" "shell" "cpio" "time" "io")

  (test-case-reference
        ("build/to-sexpr-sort" . "tests/reference/sexpr-sort")))

(test-case "immutable"  libcurie (libraries "sievert") (code "test-immutable"))
(test-case "directory"  libcurie (libraries "sievert") (code "test-directory"))
(test-case "string-set" libcurie (libraries "sievert") (code "test-string-set"))
(test-case "sexpr-set"  libcurie (libraries "sievert") (code "test-sexpr-set"))
(test-case "sexpr-sort" libcurie (libraries "sievert") (code "test-sexpr-sort"))
(test-case "cpio"       libcurie (libraries "sievert") (code "test-cpio"))

(library "curie++" libcurie
  (name "Curie++")
  (description "C++ bindings for libcurie")
  (version "11")
  (url "http://kyuba.org/")

  (code "memory++" "io++" "sexpr++" "libc++-compat")

  (headers
        "int" "io" "multiplex" "sexpr" "main"))

(test-case "objects" libcurie (libraries "curie++") (code "test-objects"))

(library "curie-math" libcurie
  (name "Curie-math")
  (description "Math functionality for libcurie")
  (version "1")
  (url "http://kyuba.org/")
  (code "math-functions" "math-matrix")
  (headers
        "math" "trig" "constants" "matrix" "functions"))

(test-case "math-matrix" libcurie (libraries "curie-math")
  (code "test-math-matrix"))

(programme "icemake" libcurie
  (name "icemake")
  (description "simple build tool for curie, based on curie")
  (version "11")

  (libraries "sievert" "syscall")

  (code "icemake" "icemake-build" "icemake-install" "icemake-run-tests"
        "icemake-link" "icemake-documentation"
        "icemake-tc-generic" "icemake-tc-gcc" "icemake-tc-borland"
        "icemake-tc-msvc" "icemake-tc-latex" "icemake-tc-doxygen"
        "icemake-os-generic")

  (documentation
        "icemake" "ice" "icemake.sx"))

(programme "ice" libcurie
  (name "ice")
  (description "Pretty-printing tool for icemake")
  (version "2")

  (libraries "sievert" "syscall")

  (code "ice"))

(programme "example-sx-stdio" libcurie
  (name "example-sx-stdio")
  (description "STDIO S-Expression Example")
  (version "1")

  (code "example-sx-stdio"))
